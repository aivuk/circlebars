// Generated by CoffeeScript 1.6.3
(function() {
  var chartHeight, circleDistance, circleRadius, eixos, eixosColor, metas, numbers,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  numbers = [[1, 2], [2], [4, 5, 6]];

  chartHeight = 600;

  circleRadius = 20;

  circleDistance = 10;

  metas = {};

  eixos = {};

  eixosColor = ["#34b746", "#4b2bbf", "#ff7f00"];

  d3.csv("/data/metas.csv", function(d) {
    var chart, eixosSize, i, maxHeight, ms, o, _fn, _results;
    d.forEach(function(r) {
      var _ref;
      if (metas[r['objetivo']] != null) {
        metas[r['objetivo']].push(r);
      } else {
        metas[r['objetivo']] = [r];
      }
      if (eixos[r['eixo']] != null) {
        if (_ref = r['objetivo'], __indexOf.call(eixos[r['eixo']], _ref) < 0) {
          return eixos[r['eixo']].push(r['objetivo']);
        }
      } else {
        return eixos[r['eixo']] = [r['objetivo']];
      }
    });
    eixosSize = [];
    _fn = function(i) {
      return eixosSize.push(eixos[i].length);
    };
    for (i in eixos) {
      _fn(i);
    }
    maxHeight = Math.max.apply(Math, (function() {
      var _results;
      _results = [];
      for (o in metas) {
        ms = metas[o];
        _results.push(ms.length);
      }
      return _results;
    })());
    chartHeight = maxHeight * (2 * circleRadius + 2 * circleDistance);
    chart = d3.select("#circlebars").style("height", parseInt(chartHeight) + "px").append("svg:svg").attr("width", "100%").attr("height", "100%");
    _results = [];
    for (o in metas) {
      ms = metas[o];
      _results.push((function(ms) {
        return ms.forEach(function(m, i) {
          return chart.append("svg:circle").attr("class", "circ").attr("cy", chartHeight - (i * (2 * circleRadius + circleDistance)) - 2 * circleRadius).attr("cx", (parseInt(o) - 1) * (2 * circleRadius + circleDistance) + circleDistance + circleRadius).attr("r", circleRadius).attr("fill", function(state) {
            if (m['estado'] === "concluída") {
              return "red";
            } else {
              return eixosColor[m['eixo'] - 1];
            }
          }).on("mouseover", function() {
            d3.select(this).transition().attr("fill", "white").attr("stroke", "#444").attr("stroke-width", "4");
            return d3.select("#metaInfo").text(m['texto']);
          }).on("mouseout", function() {
            d3.select(this).transition().attr("fill", function(state) {
              if (m['estado'] === "concluída") {
                return "red";
              } else {
                return eixosColor[m['eixo'] - 1];
              }
            }).attr("stroke-width", "0");
            return d3.select("#metaInfo").text('');
          });
        });
      })(ms));
    }
    return _results;
  });

}).call(this);
