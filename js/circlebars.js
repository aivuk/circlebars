// Generated by CoffeeScript 1.6.3
(function() {
  var chartHeight, circleDistance, circleRadius, metas, numbers;

  numbers = [[1, 2], [2], [4, 5, 6]];

  chartHeight = 600;

  circleRadius = 20;

  circleDistance = 5;

  metas = {};

  d3.csv("/data/metas.csv", function(d) {
    var chart, maxHeight, ms, o, _results;
    d.forEach(function(r) {
      if (metas[r['objetivo']] != null) {
        return metas[r['objetivo']].push(r);
      } else {
        return metas[r['objetivo']] = [r];
      }
    });
    maxHeight = Math.max.apply(Math, (function() {
      var _results;
      _results = [];
      for (o in metas) {
        ms = metas[o];
        _results.push(ms.length);
      }
      return _results;
    })());
    chartHeight = maxHeight * (2 * circleRadius + 2 * circleDistance);
    chart = d3.select("#circlebars").style("height", parseInt(chartHeight) + "px").append("svg:svg").attr("width", "100%").attr("height", "100%");
    _results = [];
    for (o in metas) {
      ms = metas[o];
      _results.push((function(ms) {
        return ms.forEach(function(m, i) {
          return chart.append("svg:circle").attr("class", "circ").attr("cy", chartHeight - (i * (2 * circleRadius + circleDistance)) - 2 * circleRadius).attr("cx", parseInt(o) * (2 * circleRadius + circleDistance) + 2 * circleRadius).attr("r", circleRadius).attr("fill", "blue").on("mouseover", function() {
            return d3.select(this).transition().attr("fill", "red");
          }).on("mouseout", function() {
            return d3.select(this).transition().attr("fill", "blue");
          });
        });
      })(ms));
    }
    return _results;
  });

}).call(this);
